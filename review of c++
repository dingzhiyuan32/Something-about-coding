Mac 编译 c++ in Terminal
g++ Hello.cpp
./a.out
或g++ Hello.cpp -o filename
./filename

IOStream
std::cout << "Hello, world!" << std::endl;

volatile：告诉编译程序，该变量值可能按程序中没有显示说明的方式改变，防止编译器作不正确的优化。

作用域分辨符：::
eg     class_name::member
全局作用域分辨符：::
eg
int x;
void f()
{
  int x;
  x=2;        // 局部X
  ::x=10;    // 全局X
}


指针是通过地址间接访问某个变量，而引用是通过别名直接访问某个变量，对引用的操作就是对被引用的变量的操作。
int &b=a;  // b是a的别名；
b=b+10;    // 对b的改变，实际上改变的是a；
引用在定义时必须初始化；初始化后，不能改变引用的“指向”。
可以用某个引用的地址值赋给一个指针，而指针则指向被引用的变量。
int a=10; int &b=a;
int *p;  p=&b;    // 则p指向a

new & delete
new: 从“堆”中动态分配存储块。
delete: 从“堆”中动态删除存储块。
用new生成对象时,会调用构造函数, 用malloc则不会;同样,用delete删除对象时,会调用析构函数, 用free则不会.
